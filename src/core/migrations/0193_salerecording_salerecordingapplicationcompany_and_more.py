# Generated by Django 4.2.2 on 2025-05-01 10:59

import core.libs.validators.nip_validator
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0192_webinarapplication_fake_application_logs'),
    ]

    operations = [
        migrations.CreateModel(
            name='SaleRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_visible', models.BooleanField(default=True, help_text='Pokaż nagranie na sprzedaż na stronie', verbose_name='Widoczne na stronie')),
                ('recording', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.webinarrecording', verbose_name='Nagranie')),
            ],
            options={
                'verbose_name': 'Nagranie na sprzedaż',
                'verbose_name_plural': 'Nagrania na sprzedaż',
                'ordering': ['-created_at'],
            },
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SaleRecordingApplicationCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nip', models.CharField(max_length=32, validators=[core.libs.validators.nip_validator.validate_nip_modelfield], verbose_name='NIP')),
                ('name', models.CharField(max_length=250, verbose_name='Nazwa')),
                ('address', models.CharField(max_length=150, verbose_name='Adres')),
                ('postal_code', models.CharField(max_length=16, verbose_name='Kod pocztowy')),
                ('city', models.CharField(max_length=150, verbose_name='Miejscowość')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone_number', models.CharField(blank=True, max_length=150, verbose_name='Telefon')),
            ],
        ),
        migrations.CreateModel(
            name='SaleRecordingApplicationInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_type', models.CharField(choices=[('INVOICE_DIGITAL', 'Faktura elektroniczna'), ('INVOICE_PAPER', 'Faktura elektroniczna i papierowa')], default='INVOICE_DIGITAL', max_length=64, verbose_name='Typ faktury')),
                ('invoice_email', models.EmailField(help_text='E-mail na który zostanie przesłana faktura', max_length=254, verbose_name='E-mail (Faktura)')),
                ('invoice_additional_info', models.TextField(blank=True, max_length=200, verbose_name='Dodatkowe informacje widoczne na Fakturze')),
                ('vat_exemption', models.CharField(choices=[('VAT_EXEMPTION_0', 'Brak zwolnienia z VAT'), ('VAT_EXEMPTION_13', 'Szkolenia zawodowe finansowane w całości ze środków publicznych - art. 43. ust. 1 pkt 29 lit. c'), ('VAT_EXEMPTION_36', 'Szkolenia zawodowe dofinansowane co najmniej w 70% ze środków publicznych - par. 3. ust. 1 pkt 14'), ('VAT_EXEMPTION_113', 'Faktura wystawiana bez podatku VAT na podstawie art. 113 ust. 1 i 9 ustawy o VAT')], default='VAT_EXEMPTION_0', max_length=64, verbose_name='Zwolnienie z VAT')),
            ],
        ),
        migrations.CreateModel(
            name='SaleRecordingApplicationPrivatePerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Imię')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nazwisko')),
                ('address', models.CharField(max_length=150, verbose_name='Adres')),
                ('postal_code', models.CharField(max_length=16, verbose_name='Kod pocztowy')),
                ('city', models.CharField(max_length=150, verbose_name='Miejscowość')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=100, verbose_name='Numer telefonu')),
            ],
        ),
        migrations.CreateModel(
            name='SaleRecordingApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('INIT', 'Rozpoczęto zakup nagrania'), ('CANCELED_BY_SYSTEM', 'System anulował zakup'), ('WAITING_FOR_PAYMENT', 'Stworzono zamówienie, czekam na płatność'), ('PAYED', 'Opłacono zamówienie')], default='INIT', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Stworzono')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Identyfikator zgłoszenia')),
                ('refcode', models.CharField(blank=True, max_length=32, verbose_name='Kod referencyjny')),
                ('tracking_code', models.CharField(blank=True, max_length=32, verbose_name='Kod śledzący')),
                ('campaign_id', models.CharField(blank=True, max_length=32, verbose_name='ID kampanii mailingowej')),
                ('price_netto', models.PositiveSmallIntegerField(verbose_name='Cena NETTO')),
                ('price_old', models.PositiveSmallIntegerField(null=True, verbose_name='Stara cena')),
                ('application_type', models.CharField(choices=[('COMPANY', 'Firma'), ('JSFP', 'JSFP'), ('PRIVATE_PERSON', 'Osoba prywatna')], default='COMPANY', max_length=64, verbose_name='Typ zgłoszenia')),
                ('additional_information', models.TextField(blank=True, verbose_name='Uwagi')),
                ('fakturownia_invoice_id', models.CharField(blank=True, max_length=32)),
                ('fakturownia_invoice_number', models.CharField(blank=True, max_length=64)),
                ('fakturownia_invoice_url', models.CharField(blank=True, max_length=300)),
                ('terms_accepted', models.BooleanField(default=False, verbose_name='Zaakceptowano regulamin')),
                ('ip_address', models.CharField(blank=True, max_length=64)),
                ('buyer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application_buyer', to='core.salerecordingapplicationcompany', verbose_name='Nabywca')),
                ('invoice', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application_invoice', to='core.salerecordingapplicationinvoice', verbose_name='Faktura')),
                ('private_person', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application_private_person', to='core.salerecordingapplicationprivateperson', verbose_name='Osoba prywatna')),
                ('recipient', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application_recipient', to='core.salerecordingapplicationcompany', verbose_name='Odbiorca')),
                ('sale_recording', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.salerecording', verbose_name='SaleRecording')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Zgłoszenie (nagranie na sprzedaż)',
                'verbose_name_plural': 'Zgłoszenia (nagranie na sprzedaż)',
            },
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
    ]
